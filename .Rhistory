filter(Received_first_COVID19_vaccination == 1) %>%
recordAttrition(reason = "participants that have received at least one dose of a COVID-19 vaccine") |>
filter(Year_first_COVID19_vaccination >= 2021) |>
recordAttrition(reason = "participants were vaccinated after 2021") |>
filter(Covid_antibody_test_results == 0 | is.na(Covid_antibody_test_results)) |>
recordAttrition(reason = "participants tested negative or did not test for COVID-19 infection") |>
filter(Year_antibody_test_performed >= 2021) |>
recordAttrition(reason = "participants COVID-19 test date is valid")
# One dose vaccine cohort ------------------------------------------------------
print("load one dose validation cohort")
one_vaccine_cohort <- vaccine_cohort |>
filter(Received_second_COVID19_vaccination == 0) |>
recordAttrition(reason = "participants have not received a second covid-19 vaccine dose") |>
mutate(Days_since_vaccine = as.numeric(difftime(Date_antibody_test_performed,Date_first_COVID19_vaccination, units = "days"))) %>%
filter(Days_since_vaccine >= 8,
Days_since_vaccine <= 56) |>
recordAttrition(reason = "participants have received the first COVID-19 vaccine between 7 and 56 days before the antibody test") |>
mutate(Age_antibody_test_performed = Year_antibody_test_performed - Year_of_birth) |>
mutate('FID' = eid, 'IID' = eid) |>
relocate('FID', 'IID') |>
select(FID, IID,
immuneResponse = Antibody_test_result,
Sex,
Age = Age_antibody_test_performed,
Genetic_batch,
PC1, PC2, PC3, PC4, PC5, PC6, PC7, PC8, PC9, PC10)
attr(one_vaccine_cohort,"cohort_attrition") <- attr(one_vaccine_cohort,"cohort_attrition") |>
union_all(tibble("N" = c(one_vaccine_cohort |> filter(immuneResponse == 1) |> tally() |> pull(),
one_vaccine_cohort |> filter(immuneResponse == 0) |> tally() |> pull()),
"Reason" = c("cases","controls"),
"Excluded" = 0))
write.table(one_vaccine_cohort, paste0(dir_results,'Cohorts/one_dose_validation.txt'), row.names = FALSE)
write.table(attr(one_vaccine_cohort,"cohort_attrition"), paste0(dir_results,'Cohorts/one_dose_validation_attrition.txt'), row.names = FALSE)
# Two dose vaccine cohort ------------------------------------------------------
print("load two dose validation cohort")
two_vaccine_cohort <- vaccine_cohort |>
filter(Received_second_COVID19_vaccination == 1) |>
recordAttrition(reason = "participants have received a second COVID-19 vaccine dose") |>
filter(Year_second_COVID19_vaccination >= 2021) %>%
recordAttrition(reason = "participants have received after 2021") |>
mutate(Days_since_vaccine = as.numeric(difftime(Date_antibody_test_performed,Date_second_COVID19_vaccination, units = "days"))) %>%
filter(Days_since_vaccine <= 56 & Days_since_vaccine >= 8) %>%
recordAttrition(reason = "participants have received the second vaccine dose between 8 and 56 days before antibody test") |>
mutate(Age_antibody_test_performed = Year_antibody_test_performed - Year_of_birth) %>%
mutate('FID' = eid, 'IID' = eid) %>% relocate('FID', 'IID') %>%
select(FID, IID,
immuneResponse = Antibody_test_result,
Sex,
Age = Age_antibody_test_performed,
Genetic_batch,
PC1, PC2, PC3, PC4, PC5, PC6, PC7, PC8, PC9, PC10)
attr(two_vaccine_cohort,"cohort_attrition") <- attr(two_vaccine_cohort,"cohort_attrition") |>
union_all(tibble("N" = c(two_vaccine_cohort |> filter(immuneResponse == 1) |> tally() |> pull(),
two_vaccine_cohort |> filter(immuneResponse == 0) |> tally() |> pull()),
"Reason" = c("cases","controls"),
"Excluded" = 0))
write.table(two_vaccine_cohort, paste0(dir_results,'Cohorts/two_dose_validation.txt'), row.names = FALSE)
write.table(attr(two_vaccine_cohort,"cohort_attrition"), paste0(dir_results,'Cohorts/two_dose_validation_attrition.txt'), row.names = FALSE)
# .PHE FILES
one_dose_cohort <- as.phe(one_vaccine_cohort, "FID", "IID") %>%
rename('FID' = 'pid',
'IID' = 'id')
two_dose_cohort <- as.phe(two_vaccine_cohort, "FID", "IID") %>%
rename('FID' = 'pid',
'IID' = 'id')
write.phe(paste0(dir_results,'/Cohorts/one_dose_validation.phe'), one_dose_cohort)
write.phe(paste0(dir_results,'/Cohorts/two_dose_validation.phe'), two_dose_cohort)
Load codes
# Load codes
source(here('R_Scripts','1-ImmuneResponse.R'))
source(here('R_Scripts','2-Breakthrough.R'))
# Load codes
source(here('R_Scripts','1-ImmuneResponse.R'))
source(here('R_Scripts','2-Breakthrough.R'))
write.table(attr(two_vaccine_cohort,"cohort_attrition"), paste0(dir_results,'Cohorts/two_dose_attrition.txt'), row.names = FALSE)
# ============================================================================ #
#                               IMMUNE RESPONSE                                #
#                            Marta Alcalde Herraiz                             #
# ============================================================================ #
# Cohort -----------------------------------------------------------------------
print("load databases")
ukb_covid <- as_tibble(read.delim(paste0(dir_data,"immune_response.tab"))) %>%
select("eid" = "f.eid",
"Antibody_test_result" = "f.27981.0.0",
"Date_antibody_test_performed" = "f.27982.0.0",
"Received_first_COVID19_vaccination" = "f.27983.0.0",
"Date_first_COVID19_vaccination" = "f.27984.0.0",
"Received_second_COVID19_vaccination" = "f.27985.0.0",
"Date_second_COVID19_vaccination" = "f.27986.0.0",
"Covid_antibody_test_results" = "f.27990.0.0") %>%
mutate(Antibody_test_result = if_else(Antibody_test_result == 2,1,Antibody_test_result)) %>%
mutate(Date_first_COVID19_vaccination  = as.Date(Date_first_COVID19_vaccination,"%Y-%m-%d"),
Year_first_COVID19_vaccination  = year(Date_first_COVID19_vaccination),
Date_second_COVID19_vaccination = as.Date(Date_second_COVID19_vaccination,"%Y-%m-%d"),
Year_second_COVID19_vaccination = year(Date_second_COVID19_vaccination),
Date_antibody_test_performed    = as.Date(Date_antibody_test_performed,"%Y-%m-%d"),
Year_antibody_test_performed    = year(Date_antibody_test_performed))
ukb_covar <- as_tibble(read_delim(paste0(dir_data,'ukb65397_covariates.csv')))
# Attrition --------------------------------------------------------------------
print("load attrition")
attr(ukb_covid, "cohort_attrition") <- tibble("N" = ukb_covid |> nrow(),
"Reason"   = "UK Biobank participants",
"Excluded" = 0)
# Main analysis ----------------------------------------------------------------
print("load main analysis")
vaccine_cohort <- ukb_covid |>
filter(!is.na(Antibody_test_result)) |>
recordAttrition(reason = "participants in the SARS-CoV-2 coronavirus antibody seroprevalence study") |>
left_join(ukb_covar, by = "eid") |>
filter(Caucasian == 1) |>
recordAttrition(reason = "participants with European ancestry") |>
filter(Sex == genetic_sex) |>
recordAttrition(reason = "participants with the same sex and genetic sex registered") |>
filter(is.na(sex_chromosome_aneuploidy)) %>%
recordAttrition(reason = "participants with no sex chromosome aneuploidy") |>
filter(Received_first_COVID19_vaccination == 1) %>%
recordAttrition(reason = "participants that have received at least one dose of a COVID-19 vaccine") |>
filter(Year_first_COVID19_vaccination >= 2021) |>
recordAttrition(reason = "participants were vaccinated after 2021") |>
filter(Covid_antibody_test_results == 0 | is.na(Covid_antibody_test_results)) |>
recordAttrition(reason = "participants tested negative or did not test for COVID-19 infection") |>
filter(Year_antibody_test_performed >= 2021) |>
recordAttrition(reason = "participants COVID-19 test date is valid")
# One dose vaccine cohort ------------------------------------------------------
print("load one dose cohort")
one_vaccine_cohort <- vaccine_cohort |>
filter(Received_second_COVID19_vaccination == 0) |>
recordAttrition(reason = "participants have not received a second covid-19 vaccine dose") |>
mutate(Days_since_vaccine = as.numeric(difftime(Date_antibody_test_performed,Date_first_COVID19_vaccination, units = "days"))) %>%
filter(Days_since_vaccine >= 8,
Days_since_vaccine <= 56) |>
recordAttrition(reason = "participants have received the first COVID-19 vaccine between 7 and 56 days before the antibody test") |>
mutate(Age_antibody_test_performed = Year_antibody_test_performed - Year_of_birth) |>
mutate('FID' = eid, 'IID' = eid) |>
relocate('FID', 'IID') |>
select(FID, IID,
immuneResponse = Antibody_test_result,
Sex,
Age = Age_antibody_test_performed,
Genetic_batch,
PC1, PC2, PC3, PC4, PC5, PC6, PC7, PC8, PC9, PC10)
attr(one_vaccine_cohort,"cohort_attrition") <- attr(one_vaccine_cohort,"cohort_attrition") |>
union_all(tibble("N" = c(one_vaccine_cohort |> filter(immuneResponse == 1) |> tally() |> pull(),
one_vaccine_cohort |> filter(immuneResponse == 0) |> tally() |> pull()),
"Reason" = c("cases","controls"),
"Excluded" = 0))
write.table(attr(one_vaccine_cohort,"cohort_attrition"), paste0(dir_results,'Cohorts/one_dose_attrition.txt'), row.names = FALSE)
# Two dose vaccine cohort ------------------------------------------------------
print("load two dose cohort")
two_vaccine_cohort <- vaccine_cohort |>
filter(Received_second_COVID19_vaccination == 1) |>
recordAttrition(reason = "participants have received a second COVID-19 vaccine dose") |>
filter(Year_second_COVID19_vaccination >= 2021) %>%
recordAttrition(reason = "participants have received after 2021") |>
mutate(Days_since_vaccine = as.numeric(difftime(Date_antibody_test_performed,Date_second_COVID19_vaccination, units = "days"))) %>%
filter(Days_since_vaccine <= 56 & Days_since_vaccine >= 8) %>%
recordAttrition(reason = "participants have received the second vaccine dose between 8 and 56 days before antibody test") |>
mutate(Age_antibody_test_performed = Year_antibody_test_performed - Year_of_birth) %>%
mutate('FID' = eid, 'IID' = eid) %>% relocate('FID', 'IID') %>%
select(FID, IID,
immuneResponse = Antibody_test_result,
Sex,
Age = Age_antibody_test_performed,
Genetic_batch,
PC1, PC2, PC3, PC4, PC5, PC6, PC7, PC8, PC9, PC10)
attr(two_vaccine_cohort,"cohort_attrition") <- attr(two_vaccine_cohort,"cohort_attrition") |>
union_all(tibble("N" = c(two_vaccine_cohort |> filter(immuneResponse == 1) |> tally() |> pull(),
two_vaccine_cohort |> filter(immuneResponse == 0) |> tally() |> pull()),
"Reason" = c("cases","controls"),
"Excluded" = 0))
write.table(attr(two_vaccine_cohort,"cohort_attrition"), paste0(dir_results,'Cohorts/two_dose_attrition.txt'), row.names = FALSE)
t <- read.table("Users/martaalcalde/Library/CloudStorage/OneDrive-Nexus365/Marta/Projects/Breakthough_infection_GWAS/manuscript_versions/1-first_revision/Results/GWAS/oneDose_assoc.regenie.merged_new.txt", header = TRUE)
t <- read.table("Users/martaalcalde/Library/CloudStorage/OneDrive-Nexus365/Marta/Projects/Breakthough_infection_GWAS/manuscript_versions/1-first_revision/Results/GWAS/oneDose_assoc.regenie.merged_new.txt", header = TRUE)
t <- read.table("Users/martaalcalde/Library/CloudStorage/OneDrive-Nexus365/Marta/Projects/Breakthough_infection_GWAS/manuscript_versions/1-first_revision/Results/GWAS/oneDose_assoc.regenie.merged_new.txt", header = TRUE)
t <- read.table("Users/martaalcalde/Library/CloudStorage/OneDrive-Nexus365/Marta/Projects/Breakthough_infection_GWAS/manuscript_versions/1-first_revision/Results/GWAS/oneDose_assoc.regenie.merged_new.txt", row.names = TRUE)
t <- read.table("/Users/martaalcalde/Library/CloudStorage/OneDrive-Nexus365/Marta/Projects/Breakthough_infection_GWAS/manuscript_versions/1-first_revision/Results/GWAS/oneDose_assoc.regenie.merged_new.txt",header = TRUE)
t
dir <- c('imputedData_oneDose',
'imputedData_twoDose',
'imputedData_breakthroughSusceptibility',
'imputedData_breakthroughSeverity')
tit <- c('A) Immune response - One dose', 'B) Immune response - Two dose',
'C) Breakthrough susceptibility', 'D) Breakthrough severity')
ylim_MH <- c(30,18,56,24)
ylim_QQ <- c(14,14,14,14)
gws_y    <- c(-log10(1.5e-8),-log10(2.5e-8),-log10(3e-8),-log10(1e-8))
y_QQ_min <- c(15,9,30,12)
y_QQ_max <- c(33,20,63,27)
alph     <- 0.7
ii <- 1
gwas <- read_delim(paste0(dir_results,'GWAS/',paste0(dir[ii],'.txt'))) %>%
mutate(P = 10^(-LOG10P))  %>%
select(CHR = CHROM, BP = GENPOS, SNP = ID, LOG10P, P) %>%
filter(!is.na(LOG10P))
library(dplyr)
gwas <- read_delim(paste0(dir_results,'GWAS/',paste0(dir[ii],'.txt'))) %>%
mutate(P = 10^(-LOG10P))  %>%
select(CHR = CHROM, BP = GENPOS, SNP = ID, LOG10P, P) %>%
filter(!is.na(LOG10P))
library(readr)
gwas <- read_delim(paste0(dir_results,'GWAS/',paste0(dir[ii],'.txt'))) %>%
mutate(P = 10^(-LOG10P))  %>%
select(CHR = CHROM, BP = GENPOS, SNP = ID, LOG10P, P) %>%
filter(!is.na(LOG10P))
gwas <- t %>%
mutate(P = 10^(-LOG10P))  %>%
select(CHR = CHROM, BP = GENPOS, SNP = ID, LOG10P, P) %>%
filter(!is.na(LOG10P))
source(here('R_Scripts',"getManhattanPlot.R"))
library(here)
source(here('R_Scripts',"getManhattanPlot.R"))
source(here('R_Scripts',"getManhattanPlot.R"))
library("here")
install.packages("here")
source(here('R_Scripts',"getManhattanPlot.R"))
library(here)
source(here('R_Scripts',"getManhattanPlot.R"))
plot1 <- getManhattanPlot(gwas,y_lim = ylim_MH[ii])
plot2 <- getQQPlot(gwas, x_lim = 6.5, y_lim = ylim_QQ[ii])
gwas_top <- gwas %>% filter(LOG10P > 1)
gwas_low <- gwas %>% filter(LOG10P <= 1) %>% sample_frac(0.01)
gwas1 <- gwas_top %>% full_join(gwas_low)
don <- gwas1 %>%
# Compute chromosome size
group_by(CHR) %>%
summarise(chr_len = max(BP)) %>%
# Calculate cumulative position of each chromosome
mutate(tot = cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
# Add this info to the initial dataset
left_join(gwas1, ., by = c("CHR" ="CHR")) %>%
# Add the cumulative position of each SNP
arrange(CHR, BP) %>%
mutate(BPcum = BP+tot)
axisdf <- don %>%
group_by(CHR) %>%
summarize(center=(max(BPcum) + min(BPcum) ) / 2 )
if (ii == 1){
# plot1<- plot1 +
#   annotate('text',don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),
#            don %>% summarise(LOG10P=max(LOG10P)) %>% as.numeric()+1,
#            label = '6:32419074_CT_C',
#            size = 1.8, color = 'black', hjust=0.5, vjust = 0) +
#   annotate('rect',
#            xmin = don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric() -1e8,
#            xmax = don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric() +1e8,
#            ymin = 8.25, ymax = 9.75,
#            alpha = alph, fill = "white")+
#   annotate('text',don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),9,
#            label = 'rs9461694',
#            size = 1.8, color = 'black', hjust=0.5, vjust = 0.5) +
#   ggtitle(tit[ii]) + theme(plot.title = element_text(size = 7, face = "bold"))
}else if(ii == 2){
# plot1 <- plot1 +
#   annotate('text',don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),
#            don %>% summarise(LOG10P=max(LOG10P)) %>% as.numeric()+.5,
#            label = 'rs114903158',
#            size = 1.8, color = 'black', hjust=0.5, vjust = 0) +
#   annotate('rect',
#            xmin = don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric() -1e8,
#            xmax = don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric() +1e8,
#            ymin = 7.6, ymax = 8.4,
#            alpha = alph, fill = "white")+
#   annotate('text',don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),
#            8,
#            label = 'rs3094106',
#            size = 1.8, color = 'black', hjust = 0.5, vjust = 0.5) +
#   ggtitle(tit[ii]) + theme(plot.title = element_text(size = 7, face = "bold"))
}else if(ii == 3){
plot1 <- plot1 +
annotate('text',don %>% filter(LOG10P==max(LOG10P) & CHR == 3) %>% select(BPcum) %>% as.numeric(),
don %>% filter(CHR == 3) %>% summarise(LOG10=max(LOG10P)) %>% as.numeric()+1.25,
label = 'rs73062389',
size=1.8, color = 'black', hjust=0.5, vjust=0)
don <- don %>% filter(LOG10P != max(LOG10P))
plot1 <- plot1 +
annotate('text',don %>% filter(LOG10P==max(LOG10P) & CHR == 3) %>% select(BPcum) %>% as.numeric(),
don %>% filter(CHR == 3) %>% summarise(LOG10=max(LOG10P)) %>% as.numeric()+1.25,
label = 'rs16861415',
size=1.8, color = 'black', hjust=0.5, vjust=0) +
annotate('text',don %>% filter(CHR == 10) %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),
don %>% filter(CHR == 10) %>% summarise(LOG10=max(LOG10P)) %>% as.numeric()+1.25,
label = 'rs1977830',
size=1.8, color = 'black', hjust=0.5, vjust=0) +
annotate('text',don %>% filter(CHR == 19) %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),
don %>% filter(CHR == 19) %>% summarise(LOG10=max(LOG10P)) %>% as.numeric()+1.25,
label = 'rs778809',
size=1.8, color = 'black', hjust=0.5, vjust=0) +
annotate('text',don %>% filter(CHR == 19) %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),
18.3,
label = 'rs11673136',
size=1.8, color = 'black', hjust=0.5, vjust=0)
a <- don %>% filter(CHR==19) %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric()+1e6
don1 <- don %>% filter(CHR == 19) %>% filter(BPcum > a)
plot1 <- plot1 +
annotate('rect',
xmin = don1 %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric() -1e8,
xmax = don1 %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric() +1e8,
ymin = don1  %>% summarise(LOG10=max(LOG10P)) %>% as.numeric()+0.75, ymax = don1  %>% summarise(LOG10=max(LOG10P)) %>% as.numeric()+1.75,
alpha = alph, fill = "white")+
annotate('text',don1 %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),
don1  %>% summarise(LOG10=max(LOG10P)) %>% as.numeric()+1.25,
label = 'rs681343',
size=1.8, color = 'black', hjust=0.5, vjust=0) +
scale_y_continuous(expand = c(0, 0), breaks = seq(0,ylim_MH[ii],5)) +
ggtitle(tit[ii]) + theme(plot.title = element_text(size = 7, face = "bold"))
}else if(ii == 4){
plot1 <- plot1 +
annotate('text',don %>% filter(LOG10P==max(LOG10P)) %>% select(BPcum) %>% as.numeric(),
don %>% summarise(LOG10=max(LOG10P)) %>% as.numeric()+.5,
label = 'rs62038344',
size=1.8, color = 'black', hjust=0.5, vjust=0) +
ggtitle(tit[ii]) + theme(plot.title = element_text(size = 7, face = "bold"))
}
plot1
ii
plot1
plot1 <- getManhattanPlot(gwas,y_lim = ylim_MH[ii])
library(ggplot)
library(ggplot2)
plot1 <- getManhattanPlot(gwas,y_lim = ylim_MH[ii])
plot1
gwas
ylim_MH[ii]
getManhattanPlot(gwas,y_lim = ylim_MH[ii])
t
t
t |> as_tibble()
t <- read.table("/Users/martaalcalde/Library/CloudStorage/OneDrive-Nexus365/Marta/Projects/Breakthough_infection_GWAS/manuscript_versions/1-first_revision/Results/GWAS/oneDose_assoc.regenie.merged_new.txt",header = TRUE)
t |> as_tibble()
t |> as_tibble() |> arrange(desc(LOG10P))
t |> as_tibble() |> arrange(desc(LOG10P))
t1 <- read.table("/Users/martaalcalde/Library/CloudStorage/OneDrive-Nexus365/Marta/Projects/Breakthough_infection_GWAS/manuscript_versions/1-first_revision/Results/GWAS/oneDose_assoc.regenie.merged.txt",header = TRUE)
t1
t1 |> as_tibble()
t1 |> as_tibble() |> arrange(desc(LOG10P))
t |> as_tibble() |> arrange(desc(LOG10P))
install.packages(ftExtra    )
bgen_onedose <- read.table("/Users/martaalcalde/Downloads/oneDose_assoc.regenie.merged (4).txt")
plink_onedose <- read.table("/Users/martaalcalde/Downloads/oneDose_assoc.regenie.merged (2).txt")
bgen_bt <- read.table("/Users/martaalcalde/Downloads/breakthroughSusceptibility_assoc.regenie.merged (2).txt")
plink_bt <- read.table("/Users/martaalcalde/Downloads/breakthroughSusceptibility_assoc.regenie.merged (1).txt")
bgen_onedose
library(dplyr)
bgen_onedose |> filter(ID == "6_32419074_CT_C")
bgen_onedose
bgen_onedose <- read.table("/Users/martaalcalde/Downloads/oneDose_assoc.regenie.merged (4).txt",header = TRUE)
plink_onedose <- read.table("/Users/martaalcalde/Downloads/oneDose_assoc.regenie.merged (2).txt", header = TRUE)
bgen_bt <- read.table("/Users/martaalcalde/Downloads/breakthroughSusceptibility_assoc.regenie.merged (2).txt", header = TRUE)
plink_bt <- read.table("/Users/martaalcalde/Downloads/breakthroughSusceptibility_assoc.regenie.merged (1).txt",header = TRUE)
bgen_onedose <- bgen_onedose |> as_tibble()
plink_onedose <- plink_onedose |> as_tibble()
bgen_bt <- bgen_bt |> as_tibble()
plink_bt <- plink_bt |> as_tibble()
bgen_onedose
bgen_onedose |> arrange(LOG10P)
bgen_onedose |> arrange(desc(LOG10P))
plink_onedose <- read.table("/Users/martaalcalde/Downloads/oneDose_assoc.regenie.merged (4).txt", header = TRUE)
bgen_onedose <- read.table("/Users/martaalcalde/Downloads/oneDose_assoc.regenie.merged (2).txt", header = TRUE)
bgen_onedose <- bgen_onedose |> as_tibble()
plink_onedose <- plink_onedose |> as_tibble()
bgen_onedose |> arrange(desc(LOG10P))
plink_onedose |> arrange(desc(LOG10P))
# One dose analysis
# For one dose plink, the main snps are:
plink_onedose |> filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104))
# One dose analysis
# For one dose plink, the main snps are:
plink_onedose |> filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104)) |>
arrange(desc(LOG10P))
plink_onedose_filtered
# One dose analysis
# For one dose plink, the main snps are:
plink_onedose_filtered <- plink_onedose |>
filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104)) |>
arrange(desc(LOG10P))
plink_onedose_filtered
# One dose analysis
# For one dose plink, the main snps are:
plink_onedose_filtered <- plink_onedose |>
filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104) |
(CHROM == 6 & GENPOS == 32419074)) |>
arrange(desc(LOG10P))
bgen_onedose_filtered <- bgen_onedose |>
filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104) |>
(CHROM == 6 & GENPOS == 32419074)) |>
arrange(desc(LOG10P))
bgen_onedose |>
filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104) |>
(CHROM == 6 & GENPOS == 32419074)) |>
arrange(desc(LOG10P))
bgen_onedose_filtered <- bgen_onedose |>
filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104) |
(CHROM == 6 & GENPOS == 32419074)) |>
arrange(desc(LOG10P))
plink_onedose_filtered
bgen_onedose_filtered
bgen_bt |> arrange(desc(LOG10P))
# Breakthrough analysis
plink_bt_filtered <- plink_bt |>
filter((CHROM == 3 & GENPOS == 45835417) |
(CHROM == 3 & GENPOS == 186696364) |
(CHROM == 19 & GENPOS == 9007748) |
(CHROM == 19 & GENPOS == 5830302) |
(CHROM == 19 & GENPOS == 49206462) |
(CHROM == 19 & GENPOS == 111975041)) |>
arrange(desc(LOG10P))
plink_bt_filtered
# Breakthrough analysis
plink_bt_filtered <- plink_bt |>
filter((CHROM == 3 & GENPOS == 45835417) |
(CHROM == 3 & GENPOS == 186696364) |
(CHROM == 19 & GENPOS == 9007748) |
(CHROM == 19 & GENPOS == 5830302) |
(CHROM == 19 & GENPOS == 49206462) |
(CHROM == 10 & GENPOS == 111975041) |
(CHROM == 10 & GENPOS == 112035723) |
(CHROM == 9 & GENPOS == 4934758)) |>
arrange(desc(LOG10P))
bgen_bt_filtered <- bgen_bt |>
filter((CHROM == 3 & GENPOS == 45835417) |
(CHROM == 3 & GENPOS == 186696364) |
(CHROM == 19 & GENPOS == 9007748) |
(CHROM == 19 & GENPOS == 5830302) |
(CHROM == 19 & GENPOS == 49206462) |
(CHROM == 10 & GENPOS == 111975041) |
#BGEN
(CHROM == 10 & GENPOS == 112035723) |
(CHROM == 9 & GENPOS == 4934758)) |>
arrange(desc(LOG10P))
plink_bt_filtered
bgen_bt_filtered
# Breakthrough analysis
plink_bt_filtered <- plink_bt |>
filter((CHROM == 3 & GENPOS == 45835417) |
(CHROM == 3 & GENPOS == 186696364) |
(CHROM == 19 & GENPOS == 9007748) |
(CHROM == 19 & GENPOS == 5830302) |
(CHROM == 19 & GENPOS == 49206462) |
(CHROM == 10 & GENPOS == 111975041) |
(CHROM == 10 & GENPOS == 112035723) |
(CHROM == 9 & GENPOS == 4934758)) |>
arrange(desc(LOG10P)) |>
rename_at(vars(-c(CHROM,GENPOS,ID)), ~paste0(.,"_plink"))
plink_bt_filtered
bgen_bt_filtered <- bgen_bt |>
filter((CHROM == 3 & GENPOS == 45835417) |
(CHROM == 3 & GENPOS == 186696364) |
(CHROM == 19 & GENPOS == 9007748) |
(CHROM == 19 & GENPOS == 5830302) |
(CHROM == 19 & GENPOS == 49206462) |
(CHROM == 10 & GENPOS == 111975041) |
#BGEN
(CHROM == 10 & GENPOS == 112035723) |
(CHROM == 9 & GENPOS == 4934758)) |>
arrange(desc(LOG10P)) |>
rename_at(vars(-c(CHROM,GENPOS,ID)), ~paste0(.,"_bgen"))
plink_bt_filtered |>
inner_join(bgen_bt_filtered)
plink_bt_filtered |>
inner_join(bgen_bt_filtered) |>
relocate(ALLELE0_bgen, .after = ALLELE0_plink)
plink_bt_filtered |>
inner_join(bgen_bt_filtered) |>
select(CHROM, GENPOS, ID, ALLELE0_plink, ALLELE0_bgen, ALLELE1_plink, ALLELE1_bgen,
A1FREQ_plink, A1FREQ_bgen, N_plink, N_bgen, BETA_plink, BETA_bgen, SE_plink,
SE_bgen, LOG10P_plink, LOG10P_bgen, INFO_bgen)
write.csv(plink_bt_filtered |>
inner_join(bgen_bt_filtered) |>
select(CHROM, GENPOS, ID, ALLELE0_plink, ALLELE0_bgen, ALLELE1_plink, ALLELE1_bgen,
A1FREQ_plink, A1FREQ_bgen, N_plink, N_bgen, BETA_plink, BETA_bgen, SE_plink,
SE_bgen, LOG10P_plink, LOG10P_bgen, INFO_bgen), "plink_bgen_bt.csv")
write.csv(plink_onedose_filtered |>
inner_join(bgen_onedose_filtered) |>
select(CHROM, GENPOS, ID, ALLELE0_plink, ALLELE0_bgen, ALLELE1_plink, ALLELE1_bgen,
A1FREQ_plink, A1FREQ_bgen, N_plink, N_bgen, BETA_plink, BETA_bgen, SE_plink,
SE_bgen, LOG10P_plink, LOG10P_bgen, INFO_bgen), "plink_bgen_onedose.csv")
plink_onedose_filtered
# One dose analysis
plink_onedose_filtered <- plink_onedose |>
filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104) |
(CHROM == 6 & GENPOS == 32419074)) |>
arrange(desc(LOG10P)) |>
rename_at(vars(-c(CHROM,GENPOS,ID)), ~paste0(.,"_plink"))
bgen_onedose_filtered <- bgen_onedose |>
filter((CHROM == 6 & GENPOS == 32413889) |
(CHROM == 6 & GENPOS == 33077271) |
(CHROM == 6 & GENPOS == 31292104) |
(CHROM == 6 & GENPOS == 32419074)) |>
arrange(desc(LOG10P)) |>
rename_at(vars(-c(CHROM,GENPOS,ID)), ~paste0(.,"_bgen"))
write.csv(plink_onedose_filtered |>
inner_join(bgen_onedose_filtered) |>
select(CHROM, GENPOS, ID, ALLELE0_plink, ALLELE0_bgen, ALLELE1_plink, ALLELE1_bgen,
A1FREQ_plink, A1FREQ_bgen, N_plink, N_bgen, BETA_plink, BETA_bgen, SE_plink,
SE_bgen, LOG10P_plink, LOG10P_bgen, INFO_bgen), "plink_bgen_onedose.csv")
