getOrder <- function(genomicRL){
  order <- genomicRL %>% 
    select(rsID,LeadSNPs,p) %>%
    arrange(p) %>%
    mutate(num = str_count(LeadSNPs,";")) %>%
    separate_rows(LeadSNPs, sep = ";") %>%
    mutate(rsID = if_else(num > 0 & rsID == LeadSNPs, 'NA',rsID)) %>%
    filter(rsID != 'NA') %>%
    group_by(rsID) %>%
    mutate(LeadSNPs = paste0(LeadSNPs, collapse = ";")) %>% 
    distinct() %>%
    mutate(a = 1) %>%
    group_by(a) %>%
    summarise(SNP = paste0(rsID, ";", LeadSNPs, collapse = ";")) %>%
    select(-a) %>%
    separate_rows(SNP, sep = ";") %>% 
    distinct()
  return(order)
}

ch  <- c('oneDose', 
         'twoDose',
         'breakthroughSusceptibility',
         'breakthroughSeverity')
nam <- c('Immune response - One dose',
         'Immune response - Two dose',
         'Breakthrough susceptibility',
         'Breakthrough severity')
nam1 <- c('Immune response_One dose',
         'Immune response_Two dose',
         'Breakthrough_Susceptibility',
         'Breakthrough_Severity')


# Table 1 OLD ==================================================================
# tableList <- list()
# tableList_Ones <- list()
# outc  <- c('CAD','MI','IS','Hypertension','T2DM')
# outc1 <- c('Coronary artery disease', 'Myocardial infarction','Ischaemic stroke','Hypertension','Type 2 diabetes mellitus')
# outcomes <- c('immuneResponse','immuneResponse','bt_infection','severity')
# for(i in 1:4){
#   gwas <- read_delim(paste0(dir_results,'GWAS/imputedData_',ch[i],'.txt'))
#   pop  <- read_delim(paste0(dir_results,'Cohorts/imputedData_',ch[i],'.csv')) %>% select('eid'='FID',  outcomes[i],'Sex','Age') %>%
#     left_join(ukb %>% select('eid','BMI' = 'f21001.0.0'))
#   outc <- c('CAD','MI','IS','Hypertension','T2DM')  
#   tableList[[i]] <- pop
#   
#   for (j in 1:length(outc)){
#     source(here('R_Scripts','PhenotypingHES.R'))
#     hes_data <- PhenotypingHes(outc[j],hes,pop %>% select('eid'))
#     
#     source(here("R_Scripts","PhenotypingGP.R"))
#     gp_data <- PhenotypingGP(outc[j],gp,pop %>% select('eid'))
#     
#     source(here("R_Scripts","PhenotypingUKB.R"))
#     ukb_data <- as_tibble(PhenotypingUKB(outc[j],pop %>% select('eid'),ukb))
#     
#     source(here('R_Scripts','mergeTables.R'))
#     data <- mergeTables(ukb_data,hes_data,gp_data)
#     
#     tableList[[i]] <- tableList[[i]] %>% left_join(data %>% select(eid, state), by = 'eid')
#     names(tableList[[i]])[names(tableList[[i]]) == 'state'] <- outc1[j]
#   }
#   
#   names(tableList[[i]])[names(tableList[[i]]) == outcomes[i]] <- nam[i]
#   tableList[[i]] <- tableList[[i]] %>% 
#     mutate(Sex = as.factor(Sex)) %>%
#     mutate(`Coronary artery disease` = as.factor(`Coronary artery disease`),
#            `Myocardial infarction` = as.factor(`Myocardial infarction`),
#            `Ischaemic stroke` = as.factor(`Ischaemic stroke`),
#            `Hypertension` = as.factor(`Hypertension`),
#            `Type 2 diabetes mellitus` = as.factor(`Type 2 diabetes mellitus`))
#   
#   tableOnes[[i]] <- CreateTableOne(vars = colnames(tableList[[i]])[3:length(colnames(tableList[[i]]))], 
#                                    data = tableList[[i]],
#                                    strata = nam[i],
#                                    test = FALSE,
#                                    includeNA = FALSE) %>%
#     print(smd = TRUE, showAllLevels = TRUE)
#   
#    aux <- as_tibble(tableOnes[[i]]) %>%
#     mutate(Variables = rownames(tableOnes[[i]])) %>%
#     relocate(Variables) %>%
#     rename("Controls" = "0",
#            "Cases" = "1") %>% 
#     mutate("level" = case_when(level == "0" ~ 'Controls',
#                                level == "1" ~ 'Cases',
#                                .default = " "))
#    aux[2,2] <- 'Females'
#    aux[3,2] <- 'Males'
#    
#    tableList_Ones[[i]] <- aux %>%
#      rename(" " = "level") %>%
#      flextable() %>%
#      align(align = "center",part = "all") %>%
#      set_caption(caption = nam[i]) %>%
#      fontsize(size = 11, part = "all") %>%
#      font(fontname='Calibri',part = "all") %>%
#      bg(i = 1, bg = "#EFEFEF", part = "header") %>%
#      width(j = c(3,4), 2.7, unit = 'cm') %>%
#      width(j = 1, 3, unit = 'cm') %>%
#      merge_at(i = c(2:3), j = 1) %>%
#      merge_at(i = c(6:7), j = 1) %>%
#      merge_at(i = c(8:9), j = 1) %>%
#      merge_at(i = c(10:11), j = 1) %>%
#      merge_at(i = c(12:13), j = 1) %>%
#      merge_at(i = c(14:15), j = 1) %>%
#      merge_at(i = c(2:3), j = 5) %>%
#      merge_at(i = c(6:7), j = 5) %>%
#      merge_at(i = c(8:9), j = 5) %>%
#      merge_at(i = c(10:11), j = 5) %>%
#      merge_at(i = c(12:13), j = 5) %>%
#      merge_at(i = c(14:15), j = 5) %>%
#      hline(i = c(1,3,4,5,7,9,11,13), part = 'body') %>%
#      hline_bottom(part = "body", border = fp_border(color = "black", width = 1.5)) %>%
#      hline_top(part = 'all', border = fp_border(color = "black", width = 1.5))
# }



# Table 1 ======================================================================
ukb <- tibble(read_delim(paste0(dir_ukb,'ukb65397.tab'))) %>%
  rename(eid = f.eid) %>%
  mutate(`f.26410.0.0` = if_else(is.na(`f.26410.0.0`),`f.26427.0.0`,`f.26410.0.0`)) %>%
  mutate(`f.26410.0.0` = if_else(is.na(`f.26410.0.0`),`f.26426.0.0`,`f.26410.0.0`)) %>%
  mutate(`f.26411.0.0` = if_else(is.na(`f.26411.0.0`),`f.26428.0.0`,`f.26411.0.0`)) %>%
  mutate(`f.26411.0.0` = if_else(is.na(`f.26411.0.0`),`f.26418.0.0`,`f.26411.0.0`)) %>%
  # mutate(`f.26412.0.0` = if_else(is.na(`f.26412.0.0`),`f.26429.0.0`,`f.26412.0.0`)) %>%
  mutate(`f.26412.0.0` = if_else(is.na(`f.26412.0.0`),`f.26419.0.0`,`f.26412.0.0`)) %>%
  mutate(`f.26413.0.0` = if_else(is.na(`f.26413.0.0`),`f.26430.0.0`,`f.26413.0.0`)) %>%
  mutate(`f.26413.0.0` = if_else(is.na(`f.26413.0.0`),`f.26420.0.0`,`f.26413.0.0`)) %>%
  mutate(`f.26414.0.0` = if_else(is.na(`f.26414.0.0`),`f.26421.0.0`,`f.26414.0.0`)) %>% 
  mutate(`f.26414.0.0` = if_else(is.na(`f.26414.0.0`),`f.26431.0.0`,`f.26414.0.0`)) %>% 
  mutate(`f.26415.0.0` = if_else(is.na(`f.26415.0.0`),`f.26432.0.0`,`f.26415.0.0`)) %>%  
  mutate(`f.26415.0.0` = if_else(is.na(`f.26415.0.0`),`f.26423.0.0`,`f.26415.0.0`)) %>%  
  mutate(`f.26416.0.0` = if_else(is.na(`f.26416.0.0`),`f.26434.0.0`,`f.26416.0.0`))

to  <- list()
for(i in 1:4){
  coh <- tibble(read_delim(paste0(dir_results,'Cohorts/imputedData_',ch[i],'.csv'))) %>%
    select("eid" = "IID", 'Sex','Age') %>% 
    left_join(ukb %>%
                select('eid',
                       'Body mass index' = 'f.21001.0.0',
                       'Index of multiple deprivation' = 'f.26410.0.0',
                       'Income score' = 'f.26411.0.0',
                       'Employment score' = 'f.26412.0.0',
                       'Health score' = 'f.26413.0.0',
                       'Education score' = 'f.26414.0.0',
                       'Housing score' = 'f.26415.0.0',
                       'Crime score' = 'f.26416.0.0',
                       'Living environment score' = 'f.26417.0.0'
                ),
              by = "eid") %>%
    mutate(Sex = if_else(Sex == 0,'Female','Male')) %>%
    mutate('Sex' = as.factor(Sex))
  
  to[[i]] <- CreateTableOne(data = coh, 
                            vars = colnames(coh[2:length(colnames(coh))])) %>%
    print(showAllLevels = TRUE)
}

tab <- tibble(data.frame(to[[1]])) %>%
  rename("Immune response_One dose" = 'Overall') %>%
  mutate(Variables = rownames(to[[1]])) %>%
  relocate('Variables') %>%
  left_join(
    tibble(data.frame(to[[2]])) %>%
      rename("Immune response_Two dose" = 'Overall') %>%
      mutate(Variables = rownames(to[[2]])),
    by = c('Variables','level'))%>%
  left_join(
    tibble(data.frame(to[[3]])) %>%
      rename("Breakthrough_Susceptibility" = 'Overall') %>%
      mutate(Variables = rownames(to[[3]])),
    by = c('Variables','level')) %>%
  left_join(
    tibble(data.frame(to[[4]])) %>%
      rename("Breakthrough_Severity" = 'Overall') %>%
      mutate(Variables = rownames(to[[4]])),
      by = c('Variables','level')) %>%
  rename(' ' = 'level') %>%
  flextable() %>%
  span_header(sep = "_") %>%
  align(j = c(3:5), align = 'center', part = 'all')
save_as_docx(tab, path = paste0(dir_results,'Tables/T1.docx'))

# Table SNPs ===================================================================
tableList_SNPs <- list()

for(i in 1:4){
  gwas        <- read_delim(paste0(dir_results,'GWAS/imputedData_',ch[i],'.txt')) %>% 
    mutate(P  = 10^(-LOG10P),
           OR = exp(BETA))
  leadSnps    <- read_delim(paste0(dir_results,'FUMA/',ch[i],'/leadSNPs.txt'))
  annovar     <- read_delim(paste0(dir_results,'FUMA/',ch[i],'/annov.txt'))
  gwascatalog <- read_delim(paste0(dir_results,'FUMA/',ch[i],'/gwascatalog.txt'))
  genomicRL   <- read_delim(paste0(dir_results,'FUMA/',ch[i],'/GenomicRiskLoci.txt'))

  order <- getOrder(genomicRL = genomicRL)
  
  t <- order %>%
    left_join(leadSnps %>%
                select('uniqID',
                       'CHR' = 'chr',
                       'BP'  = 'pos',
                       'SNP' = 'rsID'),
              by = 'SNP') %>%
    #mutate('Trait' = nam[i]) %>%
    left_join(gwas %>%
                select('CHR' = 'CHROM',
                       'BP'  = 'GENPOS',
                       'SNP' = 'ID',
                       'EAF' = 'A1FREQ',
                       'EA'  = 'ALLELE1',
                       'OA'  = 'ALLELE0',
                       'OR'  = 'OR',
                       'SE'  = 'SE',
                       'PVAL' = 'P'),
              by = c('CHR','BP','SNP')) %>%
    left_join(annovar %>% 
                group_by(uniqID, 'Function' = annot) %>% 
                summarise('Gene' = paste0(symbol, collapse=" - "), 
                          'Distance (b)' = paste0(dist, collapse=" - ")) %>%
                ungroup(),
              by = "uniqID") %>%
    left_join(
      gwascatalog %>% rename("SNP" = "IndSigSNP") %>%
        select('SNP', 'Trait') %>%
        distinct() %>%
        group_by(SNP) %>%
        summarise('Previous reported trait' = paste0(Trait, collapse = ", ")),
      by = 'SNP') %>%
    mutate(`Previous reported trait` = if_else(is.na(`Previous reported trait`), '-',`Previous reported trait`))
  
  tableList_SNPs[[i]] <- t %>% 
    select(-uniqID) %>%
    mutate('EAF' = round(EAF, digits=2),
           'OR'  = round(OR,  digits=2),
           'SE'  = round(SE,  digits=2),
           'PVAL' = formatC(PVAL, format = "e", digits = 1)) %>% 
    flextable() %>%
    bg(i = 1, bg = "#EFEFEF", part = "head") %>%
    bold(bold = TRUE, part="header") %>%
    align(align = 'center', part = "all") %>%
    align(j = 13, align = 'left', part = 'body') %>%
    width(j = c('CHR','EAF','EA','OA','OR','SE'), width = 1.2, unit = 'cm') %>%
    width(j = c('SNP','BP','PVAL'), width = 1.7, unit = 'cm') %>%
    width(j = c('Function','Gene','Distance (b)'), width = 2, unit = 'cm') %>%
    width(j = c('Previous reported trait'), width = 5, unit = 'cm') %>%
    hline(part = "body")
  
}


# Table 2 - Validation ---------------------------------------------------------
tableList_Validation <- list()
for(i in 1:4){
  genomicRL   <- read_delim(paste0(dir_results,'FUMA/',ch[i],'/GenomicRiskLoci.txt'))
  order <- getOrder(genomicRL)
  gwas_validation <- read_delim(paste0(dir_results,'GWAS/imputedData_',ch[i],'_Validation.txt'))
  
  t <- order %>% rename('ID' = 'SNP') %>%
    left_join(gwas_validation,
              by = 'ID') %>% 
    mutate(OR = round(exp(BETA), digits = 2)) %>%
    mutate('P Value' = formatC(10^{-LOG10P}, format = "e", digit = 1),
           'Lower'   = exp(BETA-1.96*SE),
           'Upper'   = exp(BETA+1.96*SE)) %>%
    select(CHROM, ID, 'Validation_N' = 'N', 'Validation_OR' = 'OR', 'Validation_P Value' = 'P Value',
           'Validation_Lower' = 'Lower', 'Validation_Upper' = 'Upper') %>%
    mutate(Phenotype = nam[i]) %>%
    left_join(
      read_delim(paste0(dir_results,'GWAS/imputedData_',ch[i],'.txt')) %>%
        mutate('Main analysis_N' = N) %>%
        mutate('Main analysis_OR' = round(exp(BETA), digits = 2)) %>%
        mutate('Main analysis_P Value' = formatC(10^{-LOG10P}, format = "e", digit = 1)) %>%
        mutate('Main analysis_Lower' = exp(BETA-1.96*SE)) %>%
        mutate('Main analysis_Upper' = exp(BETA+1.96*SE)) %>%
        select(ID, 'Main analysis_N', 'Main analysis_OR', 'Main analysis_P Value',
               'Main analysis_Lower', 'Main analysis_Upper'),
      by = 'ID'
    )
  
  tableListValidation[[i]] <- t
}

gwas <- tableListValidation[[1]] %>%
  add_row(tableListValidation[[2]]) %>%
  add_row(tableListValidation[[3]]) %>%
  add_row(tableListValidation[[4]])

write.table(gwas,paste0(dir_results,'/Validation/Validation.txt'))

tableList_Validation[[i]] <- gwas %>%
  select(-CHROM,-`Main analysis_Lower`,-`Main analysis_Upper`,-`Validation_Upper`,-`Validation_Lower`) %>%
  relocate('Main analysis_N', .after = 'ID') %>%
  relocate('Main analysis_OR', .after = 'Main analysis_N') %>%
  relocate('Main analysis_P Value', .after = 'Main analysis_OR') %>%
  relocate('Phenotype', .before = 'ID') %>%
  flextable() %>%
  span_header(sep = "_") %>%
  align(align = 'center', part = 'all') %>%
  bg(j = c('Main analysis_N',
           'Main analysis_P Value',
           'Validation_OR'), bg = "#EFEFEF", part = "all")  %>%
  color(i = ~ as.numeric(`Validation_P Value`) < 0.05, j = c('ID','Main analysis_N','Main analysis_OR','Main analysis_P Value',
                                                             'Validation_N','Validation_OR','Validation_P Value'), color = 'red') %>%
  hline(i=c(14,16,25))
  

# Table comparator ==============================================================
gwasList  <- list()
genomicRL <- data.frame(Phenotype = NA, CHR = NA, SNP = NA, uniqID = NA, Function = NA, Gene = NA)
annovarList <- list()
for (i in 1:4){
  aux <- getOrder(genomicRL = read_delim(paste0(dir_results,'FUMA/',ch[i],'/GenomicRiskLoci.txt'))) %>% 
    left_join(read_delim(paste0(dir_results,'FUMA/',ch[i],'/leadSNPs.txt')) %>% select(SNP = rsID, uniqID, CHR = chr), by = c('SNP')) %>%
    left_join(read_delim(paste0(dir_results,'FUMA/',ch[i],'/annov.txt'))    %>% 
                group_by(uniqID, 'Function' = annot) %>%
                summarise('Gene' = paste0(symbol, collapse = " - ")) %>% 
                ungroup(),
              by = 'uniqID') %>%
    mutate(Phenotype = nam[i])
  
  genomicRL <- genomicRL %>% add_row(aux)
  
  gwasList[[i]] <- read_delim(paste0(dir_results,'GWAS/imputedData_',ch[i],'.txt')) %>% 
    mutate(P  = 10^(-LOG10P),
           OR = exp(BETA))
}

t <- genomicRL %>% 
  filter(!is.na(SNP)) %>% 
  rename('Lead SNP' = 'SNP') %>%
  left_join(gwasList[[1]] %>%
              mutate(OR = round(OR, digits = 2),
                     SE = round(SE, digits = 2),
                     P  = formatC(10^{-LOG10P}, format = "e", digit = 1)) %>%
              select('Lead SNP' = 'ID',
                     'Immune response_One dose_OR' = OR,
                     'Immune response_One dose_SE' = SE,
                     'Immune response_One dose_P Value' = P),
            by = 'Lead SNP') %>%
  left_join(gwasList[[2]] %>%
              mutate(OR = round(OR, digits = 2),
                     SE = round(SE, digits = 2),
                     P  = formatC(10^{-LOG10P}, format = "e", digit = 1)) %>%
              select('Lead SNP' = 'ID',
                     'Immune response_Two dose_OR' = OR,
                     'Immune response_Two dose_SE' = SE,
                     'Immune response_Two dose_P Value' = P),
            by = 'Lead SNP') %>%
  left_join(gwasList[[3]] %>%
              mutate(OR = round(OR, digits = 2),
                     SE = round(SE, digits = 2),
                     P  = formatC(10^{-LOG10P}, format = "e", digit = 1)) %>%
              select('Lead SNP' = 'ID',
                     'Breakthrough_Susceptibility_OR' = OR,
                     'Breakthrough_Susceptibility_SE' = SE,
                     'Breakthrough_Susceptibility_P Value' = P),
            by = 'Lead SNP') %>%
  left_join(gwasList[[4]] %>%
              mutate(OR = round(OR, digits = 2),
                     SE = round(SE, digits = 2),
                     P  = formatC(10^{-LOG10P}, format = "e", digit = 1)) %>%
              select('Lead SNP' = 'ID',
                     'Breakthrough_Severity_OR' = OR,
                     'Breakthrough_Severity_SE' = SE,
                     'Breakthrough_Severity_P Value' = P),
            by = 'Lead SNP')
tableList_Comparator <- t %>% 
  select(-"uniqID", -"Function") %>%
  flextable() %>%
  span_header(sep = "_") %>%
  bold(bold = TRUE, part="header") %>%
  align(align = 'center', part = "all") %>%
  align(i = 1, align = 'center', part = "header") %>%
  align(i = 2, align = 'center', part = "header") %>%
  align(i = 3, align = 'center', part = "header") %>%
  align(align = "center",part = "all") %>%
  # vline(i = 1, j = c(4:6), part = "header") %>%
  # vline(i = 2, j = c(4:9), part = "header") %>%
  # vline(i = 3, j = seq(4,10,2), part = "header") %>%
  # vline(j = seq(4,10,2), part = "body") %>%
  # bg(j = "Immune response_One dose_OR", bg = "#EFEFEF", part = "all") %>%
  # bg(j = "Immune response_One dose_P Value", bg = "#EFEFEF", part = "all") %>%
  # bg(j = "Immune response_Two dose_SE",    bg = "#EFEFEF", part = "body") %>%
  # bg(j = "Breakthrough_Susceptibility_OR",bg = "#EFEFEF", part = "body") %>%
  # bg(j = "Breakthrough_Susceptibility_P Value",bg = "#EFEFEF", part = "body") %>%
  # bg(j = "Breakthrough_Severity_SE",bg = "#EFEFEF", part = "body") %>%
  # bg(i = 3, j = c(5,7,9,11), bg = "#EFEFEF", part = "header") %>%
  # bg(i = 2, j = c(5,9), bg = "#EFEFEF", part = "header") %>%
  # bg(i = 1, j = c(5), bg = "#EFEFEF", part = "header") %>%
  width(j = 1, width = 1, unit = "in") %>%
  bold(bold = TRUE, part="header") %>%
  width(j = "Immune response_One dose_OR", width = 1.2, unit = 'cm') %>%
  width(j = "Immune response_Two dose_OR", width = 1.2, unit = 'cm') %>%
  width(j = "Breakthrough_Susceptibility_OR", width = 1.2, unit = 'cm') %>%
  width(j = "Breakthrough_Severity_OR", width = 1.2, unit = 'cm') %>%
  width(j = "Immune response_One dose_SE", width = 1.2, unit = 'cm') %>%
  width(j = "Immune response_Two dose_SE", width = 1.2, unit = 'cm') %>%
  width(j = "Breakthrough_Susceptibility_SE", width = 1.2, unit = 'cm') %>%
  width(j = "Breakthrough_Severity_SE", width = 1.2, unit = 'cm') %>%
  width(j = "Immune response_One dose_P Value", width = 1.6, unit = 'cm') %>%
  width(j = "Immune response_Two dose_P Value", width = 1.6, unit = 'cm') %>%
  width(j = "Breakthrough_Susceptibility_P Value", width = 1.6, unit = 'cm') %>%
  width(j = "Breakthrough_Severity_P Value", width = 1.6, unit = 'cm') %>%
  width(j = "Lead SNP", width = 2.7, unit = 'cm') %>%
  width(j = "CHR", width = 2.65, unit = 'cm') %>%
  width(j = "Gene", width = 2.3, unit = 'cm') %>%
  fontsize(size = 11, part = "all") %>%
  font(fontname='Calibri',part = "all")



tList <- list(tableList_Ones[[1]],
              tableList_Ones[[2]],
              tableList_Ones[[3]],
              tableList_Ones[[4]],
              tableList_SNPs[[1]],
              tableList_SNPs[[2]],
              tableList_SNPs[[3]],
              tableList_SNPs[[4]],
              tableList_Validation[[4]], 
              tableList_Comparator)
save_as_docx(values = tList, path = paste0(dir_results,'Tables/AllTables.docx'))




